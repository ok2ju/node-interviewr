{
  "parser": "babel-eslint",
  "ecmaFeatures": {
    "modules": true,
  },
  "env": {
    "browser": true,
    "node": true,
    "mocha": true,
    "es6": true
  },
  "rules": {
    //
    //Possible Errors
    //
    // The following rules point out areas where you might have made mistakes.
    //
    "comma-dangle": 2,
    "no-cond-assign": 2,
    "no-console": 1,
    "no-constant-condition": 2,
    "no-control-regex": 2,
    "no-debugger": 2,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-empty": 2,
    "no-empty-character-class": 2,
    "no-ex-assign": 2,
    "no-extra-boolean-cast": 1,
    "no-extra-semi": 2,
    "no-func-assign": 2,
    "no-inner-declarations": 2,
    "no-invalid-regexp": 2,
    "no-irregular-whitespace": 2,
    "no-negated-in-lhs": 2,
    "no-obj-calls": 2,
    "no-regex-spaces": 2,
    "quote-props": 2,
    "no-sparse-arrays": 2,
    "no-unreachable": 2,
    "use-isnan": 2,
    "valid-jsdoc": [2, {
      "requireReturnDescription": false
    }],
    "valid-typeof": 2,
    //
    // Best Practices
    //
    // These are rules designed to prevent you from making mistakes.
    // They either prescribe a better way of doing something or help you avoid footguns.
    //
    "block-scoped-var": 0, // treat var statements as if they were block scoped (off by default). 0: deep destructuring is not compatible https://github.com/eslint/eslint/issues/1863
    "complexity": [1,5],
    "consistent-return": 1,
    "curly": 2,
    "default-case": 2,
    "dot-notation": 1,
    "eqeqeq": 2,
    "guard-for-in": 2,
    "no-alert": 2,
    "no-caller": 2,
    "no-div-regex": 2,
    "no-else-return": 2,
    "no-eq-null": 2,
    "no-eval": 2,
    "no-extend-native": 2,
    "no-extra-bind": 2,
    "no-fallthrough": 2,
    "no-floating-decimal": 1,
    "no-implied-eval": 2,
    "no-iterator": 2,
    "no-labels": 2,
    "no-lone-blocks": 2,
    "no-loop-func": 2,
    "no-multi-spaces": 2,
    "no-multi-str": 0,
    "no-native-reassign": 2,
    "no-new-func": 2,
    "no-new-wrappers": 2,
    "no-new": 2,
    "no-octal-escape": 2,
    "no-octal": 2,
    "no-param-reassign": 2,
    "no-process-env": 1,
    "no-proto": 2,
    "no-redeclare": 2,
    "no-return-assign": 2,
    "no-script-url": 2,
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-throw-literal": 2,
    "no-unused-expressions": 2,
    "no-void": 2,
    "no-warning-comments": 1,
    "no-with": 2,
    "radix": 2,
    "wrap-iife": 2,
    "yoda": 2,

    //
    // Strict Mode
    //
    // These rules relate to using strict mode.
    //
    "strict": 0, // controls location of Use Strict Directives. 0: required by `babel-eslint`

    //
    // Variables
    //
    // These rules have to do with variable declarations.
    //
    "no-delete-var": 2,
    "no-label-var": 2,
    "no-shadow-restricted-names": 2,
    "no-shadow": 2,
    "no-undef-init": 2,
    "no-undef": 2,
    "no-undefined": 2,
    "no-unused-vars": 2,
    "no-use-before-define": 0,

    //
    //Stylistic Issues
    //
    // These rules are purely matters of style and are quite subjective.
    //
    "brace-style": 1,
    "camelcase": 1,
    "comma-spacing": [2, {"before": false, "after": true}],
    "comma-style": [2, "last"],
    "computed-property-spacing": 1,
    "consistent-this": [2, "self"],
    "func-names": 0,
    "indent": [1, 2],
    "key-spacing": [1, {
      "beforeColon": false,
      "afterColon": true
    }],
    "lines-around-comment": 1,
    "max-nested-callbacks": [2, 3],
    "new-cap": 1,
    "new-parens": 1,
    "newline-after-var": 0,
    "no-array-constructor": 2,
    "no-continue": 2,
    "no-inline-comments": 0,
    "no-lonely-if": 1,
    "no-mixed-spaces-and-tabs": 1,
    "no-multiple-empty-lines": 1,
    "no-nested-ternary": 2,
    "no-new-object": 2,
    "no-spaced-func": 1,
    "no-trailing-spaces": 1,
    "no-underscore-dangle": 0,
    "no-unneeded-ternary": 2,
    "object-curly-spacing": [1, "never"],
    "operator-assignment": [2, "always"],
    "quote-props": [1, "as-needed"],
    "quotes": [1, "single", "avoid-escape"],
    "semi-spacing": [1, {"before": false, "after": false}],
    "semi": 2,
    "space-after-keywords": [0, "never"],
    "space-before-blocks": 1,
    "space-before-function-paren": [1, "never"],
    "space-in-parens": 1,
    "space-infix-ops": 1,
    "space-return-throw-case": 1,
    "space-unary-ops": 1,
    "spaced-comment": 0,
    "wrap-regex": 1,

    //
    // ECMAScript 6
    //
    // These rules are only relevant to ES6 environments and are off by default.
    //
    "no-var": 2,
    "generator-star-spacing": [1, "after"],
    "object-shorthand": [2, "always"],
    "prefer-const": 1,

    //
    // Legacy
    //
    // The following rules are included for compatibility with JSHint and JSLint.
    // While the names of the rules may not match up with the JSHint/JSLint counterpart,
    // the functionality is the same.
    //
    "max-depth": [2, 3], // specify the maximum depth that blocks can be nested (off by default)
    "max-len": [2, 120, 2], // specify the maximum length of a line in your program (off by default)
    "max-params": [2, 5], // limits the number of parameters that can be used in the function declaration. (off by default)
    "max-statements": 0, // specify the maximum number of statement allowed in a function (off by default)
    "no-bitwise": 0, // disallow use of bitwise operators (off by default)
    "no-plusplus": 2, // disallow use of unary operators, ++ and -- (off by default)
  }
}